[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog2310",
    "section": "",
    "text": "Using Python Models with dbt and DuckDB\n\n\n \n\n\ndbt\n\nduckdb\n\npython\n\ndata engineering\n\n\n \n\n\n\n\n\nApr 16, 2025\n3atthias 3erger\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "This tutorial shows how to use Python models alongside SQL models in dbt with the dbt-duckdb adapter. With this setup, you can do data transformations using both SQL and Python (pandas) in the same pipeline!\n\n\n\nBefore starting, create a virtual environment to isolate dependencies.\n# Create a virtual environment\n$ python -m venv .venv\n\n# Activate it\n$ source .venv/bin/activate\nOnce activated, install the required packages.\n$ pip install dbt-duckdb duckdb pandas\n\n\n\n\nWith the virtual environment active, make sure you have:\n\nPython 3.8+\ndbt-duckdb\nduckdb\npandas\n\n\n\n\n\n$ dbt init dbt_duckdb_python_demo\n$\n$ cd dbt_duckdb_python_demo\nIn between choose duckdb as your adapter when prompted.\n\n\n\n\nEdit your dbt profile (~/.dbt/profiles.yml) to look like this:\ndbt_duckdb_python_demo:\n  target: dev\n  outputs:\n    dev:\n      type: duckdb\n      path: \"dbt_duckdb_python_demo.duckdb\"\n\n\n\n\nCreate a CSV file at seeds/my_seed_data.csv:\nid,first_name,last_name\n1,Alice,Smith\n2,Bob,Jones\n3,Charlie,Brown\nThen update your dbt_project.yml (if needed) to include:\nseeds:\n  dbt_duckdb_python_demo:\n    my_seed_data:\n      file: seeds/my_seed_data.csv\nRun the seed:\n$ dbt seed\n\n\n\n\nCreate a file at models/my_python_model.py:\n# models/my_python_model.py\n\nimport pandas as pd\n\ndef model(dbt, session):\n    dbt.config(materialized=\"table\")\n\n    df = dbt.ref(\"my_seed_data\")\n    df['full_name'] = df['first_name'] + ' ' + df['last_name']\n    df['name_length'] = df['full_name'].str.len()\n\n    return df\nThis uses pandas to create new columns: full_name and name_length.\n\n\n\n\nNow let’s add a SQL model that builds on the Python model.\nCreate models/my_sql_model.sql:\n-- models/my_sql_model.sql\n\nSELECT\n    id,\n    full_name,\n    name_length\nFROM {{ ref('my_python_model') }}\nWHERE name_length &gt; 10\nThis filters the data to only rows with a name longer than 10 characters.\n\n\n\n\nNow run everything:\n$ dbt run\nYou should see both models build: - my_python_model (Python with pandas) - my_sql_model (classic SQL)\n20:52:17  Running with dbt=1.9.4\n20:52:17  Registered adapter: duckdb=1.9.2\n20:52:18  Found 4 models, 1 seed, 4 data tests, 426 macros\n20:52:18  \n20:52:18  Concurrency: 1 threads (target='dev')\n20:52:18  \n20:52:18  1 of 4 START sql table model main.my_first_dbt_model ............... [RUN]\n20:52:18  1 of 4 OK created sql table model main.my_first_dbt_model... [OK in 0.07s]\n20:52:18  2 of 4 START python table model main.my_python_model................ [RUN]\n20:52:18  2 of 4 OK created python table model main.my_python_model... [OK in 0.24s]\n20:52:18  3 of 4 START sql view model main.my_second_dbt_model................ [RUN]\n20:52:18  3 of 4 OK created sql view model main.my_second_dbt_model... [OK in 0.04s]\n20:52:18  4 of 4 START sql view model main.my_sql_model....................... [RUN]\n20:52:18  4 of 4 OK created sql view model main.my_sql_model.......... [OK in 0.02s]\n20:52:18  \n20:52:18  Finished running 2 table models, 2 view models in \n0 hours 0 minutes and 0.45 seconds (0.45s).\n20:52:18  \n20:52:18  Completed successfully\n20:52:18  \n20:52:18  Done. PASS=4 WARN=0 ERROR=0 SKIP=0 TOTAL=4\n\n\n\n\nLaunch the DuckDB CLI:\n$ duckdb dbt_duckdb_python_demo.duckdb\nQuery the models:\nD SELECT * FROM my_python_model;\n┌───────┬────────────┬───────────┬───────────────┬─────────────┐\n│  id   │ first_name │ last_name │   full_name   │ name_length │\n│ int32 │  varchar   │  varchar  │    varchar    │    int64    │\n├───────┼────────────┼───────────┼───────────────┼─────────────┤\n│     1 │ Alice      │ Smith     │ Alice Smith   │          11 │\n│     2 │ Bob        │ Jones     │ Bob Jones     │           9 │\n│     3 │ Charlie    │ Brown     │ Charlie Brown │          13 │\n└───────┴────────────┴───────────┴───────────────┴─────────────┘\nD SELECT * FROM my_sql_model;\n┌───────┬───────────────┬─────────────┐\n│  id   │   full_name   │ name_length │\n│ int32 │    varchar    │    int64    │\n├───────┼───────────────┼─────────────┤\n│     1 │ Alice Smith   │          11 │\n│     3 │ Charlie Brown │          13 │\n└───────┴───────────────┴─────────────┘\n\n\n\n\n\n\n\n\n\n\n\n\nComponent\nFile\nDescription\n\n\n\n\nSeed\nmy_seed_data.csv\nSample input data\n\n\nPython model\nmy_python_model.py\nAdds full_name and name_length\n\n\nSQL model\nmy_sql_model.sql\nFilters names based on length\n\n\n\n\n\n\n\n\nAdd tests using schema.yml\nGenerate documentation:\n$ dbt docs generate && dbt docs serve\n\nTry using sklearn or statsmodels in your Python models!"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#set-up-a-python-virtual-environment",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#set-up-a-python-virtual-environment",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Before starting, create a virtual environment to isolate dependencies.\n# Create a virtual environment\n$ python -m venv .venv\n\n# Activate it\n$ source .venv/bin/activate\nOnce activated, install the required packages.\n$ pip install dbt-duckdb duckdb pandas"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#prerequisites",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#prerequisites",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "With the virtual environment active, make sure you have:\n\nPython 3.8+\ndbt-duckdb\nduckdb\npandas"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#initialize-a-dbt-project",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#initialize-a-dbt-project",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "$ dbt init dbt_duckdb_python_demo\n$\n$ cd dbt_duckdb_python_demo\nIn between choose duckdb as your adapter when prompted."
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#configure-profiles.yml",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#configure-profiles.yml",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Edit your dbt profile (~/.dbt/profiles.yml) to look like this:\ndbt_duckdb_python_demo:\n  target: dev\n  outputs:\n    dev:\n      type: duckdb\n      path: \"dbt_duckdb_python_demo.duckdb\""
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#add-seed-data",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#add-seed-data",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Create a CSV file at seeds/my_seed_data.csv:\nid,first_name,last_name\n1,Alice,Smith\n2,Bob,Jones\n3,Charlie,Brown\nThen update your dbt_project.yml (if needed) to include:\nseeds:\n  dbt_duckdb_python_demo:\n    my_seed_data:\n      file: seeds/my_seed_data.csv\nRun the seed:\n$ dbt seed"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#create-a-python-model",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#create-a-python-model",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Create a file at models/my_python_model.py:\n# models/my_python_model.py\n\nimport pandas as pd\n\ndef model(dbt, session):\n    dbt.config(materialized=\"table\")\n\n    df = dbt.ref(\"my_seed_data\")\n    df['full_name'] = df['first_name'] + ' ' + df['last_name']\n    df['name_length'] = df['full_name'].str.len()\n\n    return df\nThis uses pandas to create new columns: full_name and name_length."
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#create-a-sql-model",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#create-a-sql-model",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Now let’s add a SQL model that builds on the Python model.\nCreate models/my_sql_model.sql:\n-- models/my_sql_model.sql\n\nSELECT\n    id,\n    full_name,\n    name_length\nFROM {{ ref('my_python_model') }}\nWHERE name_length &gt; 10\nThis filters the data to only rows with a name longer than 10 characters."
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#run-the-models",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#run-the-models",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Now run everything:\n$ dbt run\nYou should see both models build: - my_python_model (Python with pandas) - my_sql_model (classic SQL)\n20:52:17  Running with dbt=1.9.4\n20:52:17  Registered adapter: duckdb=1.9.2\n20:52:18  Found 4 models, 1 seed, 4 data tests, 426 macros\n20:52:18  \n20:52:18  Concurrency: 1 threads (target='dev')\n20:52:18  \n20:52:18  1 of 4 START sql table model main.my_first_dbt_model ............... [RUN]\n20:52:18  1 of 4 OK created sql table model main.my_first_dbt_model... [OK in 0.07s]\n20:52:18  2 of 4 START python table model main.my_python_model................ [RUN]\n20:52:18  2 of 4 OK created python table model main.my_python_model... [OK in 0.24s]\n20:52:18  3 of 4 START sql view model main.my_second_dbt_model................ [RUN]\n20:52:18  3 of 4 OK created sql view model main.my_second_dbt_model... [OK in 0.04s]\n20:52:18  4 of 4 START sql view model main.my_sql_model....................... [RUN]\n20:52:18  4 of 4 OK created sql view model main.my_sql_model.......... [OK in 0.02s]\n20:52:18  \n20:52:18  Finished running 2 table models, 2 view models in \n0 hours 0 minutes and 0.45 seconds (0.45s).\n20:52:18  \n20:52:18  Completed successfully\n20:52:18  \n20:52:18  Done. PASS=4 WARN=0 ERROR=0 SKIP=0 TOTAL=4"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#view-the-output-in-duckdb",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#view-the-output-in-duckdb",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Launch the DuckDB CLI:\n$ duckdb dbt_duckdb_python_demo.duckdb\nQuery the models:\nD SELECT * FROM my_python_model;\n┌───────┬────────────┬───────────┬───────────────┬─────────────┐\n│  id   │ first_name │ last_name │   full_name   │ name_length │\n│ int32 │  varchar   │  varchar  │    varchar    │    int64    │\n├───────┼────────────┼───────────┼───────────────┼─────────────┤\n│     1 │ Alice      │ Smith     │ Alice Smith   │          11 │\n│     2 │ Bob        │ Jones     │ Bob Jones     │           9 │\n│     3 │ Charlie    │ Brown     │ Charlie Brown │          13 │\n└───────┴────────────┴───────────┴───────────────┴─────────────┘\nD SELECT * FROM my_sql_model;\n┌───────┬───────────────┬─────────────┐\n│  id   │   full_name   │ name_length │\n│ int32 │    varchar    │    int64    │\n├───────┼───────────────┼─────────────┤\n│     1 │ Alice Smith   │          11 │\n│     3 │ Charlie Brown │          13 │\n└───────┴───────────────┴─────────────┘"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#summary",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#summary",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Component\nFile\nDescription\n\n\n\n\nSeed\nmy_seed_data.csv\nSample input data\n\n\nPython model\nmy_python_model.py\nAdds full_name and name_length\n\n\nSQL model\nmy_sql_model.sql\nFilters names based on length"
  },
  {
    "objectID": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#whats-next",
    "href": "posts/dbt-python-duckdb/dbt-duckdb-python-tutorial.html#whats-next",
    "title": "Using Python Models with dbt and DuckDB",
    "section": "",
    "text": "Add tests using schema.yml\nGenerate documentation:\n$ dbt docs generate && dbt docs serve\n\nTry using sklearn or statsmodels in your Python models!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]